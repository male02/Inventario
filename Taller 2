package umariana.taller2;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import mundo.Producto;


/**
 * @author Maria Vallejo
* @ author Juliana Muñoz
 */
//se crea la clase con dos variables privadas
public class Taller2 {
//array llamado ´mis productos´ que almacena objetos de tipo ´producto´
    private  ArrayList<Producto> misProductos; 
 //objeto de tipo scanner
    private  Scanner lector;

    public Taller2() {
//Array (contenedor) vacio para almacenar
        misProductos = new ArrayList<>();
        lector = new Scanner(System.in);
    }

//metodo para mostrar el menu de opciones
    public void mostrarMenu() {
//para determinar si el menu debe seguir mostrandose
    boolean activo = true;

//crear un ciclo para mantener el menu activo hasta finalizar con la opcion 5 que es (salir)

        do {
            System.out.println("=====Ingrese una opcion.=====");
            System.out.println("1. Agregar Producto\n2. Mostrar Inventario ");
            System.out.println("3. Mostrar Inventario Organizado\n4. Eliminar Producto\n5. Salir");
            int opcion = lector.nextInt();
            switch (opcion) {
                 case 1:
        //llamar metodo para agregar un producto
                    agregarProducto();
                    break;

                case 2:
        //Condicional para verificar si hay o no productos agregados
                    if (misProductos.size() == 0) {
                        System.out.println("No hay productos agregados.");
                    } else {
        //llamar metodo para mostrar los productos
                        mostrarProductos();
                    }
                    break;
                case 3:
         //Condicional para verificar si hay o no productos agregados
                    if (misProductos.size() == 0) {
                        System.out.println("No hay productos agregados.");
                    } else {
          //llamar metodo para enlistar productos
                        listarProductos();
                    }
                    break;
                case 4:
          //Condicional para verificar si hay o no productos agregados
                    if(misProductos.size()==0){
                        System.out.println("No hay productos agregados");
                    } else {
          //llamar metodo para eliminar un producto
                    eliminarProducto();
                    }
                    break;
                case 5:
           //establecer variable para terminar el ciclo
                    activo = false;
                    System.out.println("Programa terminado");
                    break;
                default:
            // mensaje de error si se ingresa una opcion incorrecta
                    System.out.println("opcion no valida");
            }
        } while (activo);
    }

  
        
//metodo que permite agregar un nuevo producto
public void agregarProducto() {
System.out.println("====AGREGAR PRODUCTO====");
        lector.nextLine();

//solicitar el ingreso sobre datos del producto
        System.out.println("Ingrese el nombre del producto");
        String nombre = lector.nextLine();

        System.out.println("Ingrese el precio del producto");
        double precio = lector.nextDouble();

        System.out.println("Ingrese la cantidad del producto");
        int cantidad = lector.nextInt();

        System.out.println("Ingrese el Id del producto");
        int idProducto = lector.nextInt();

        System.out.println("Producto agregado correctamente");
        //Cumplimiento de los parametros de la prioridad
        // Se crea un nuevo objeto de la clase Producto utilizando los datos 
        //proporcionados por el usuario y se almacena en la colección misProductos utilizando el método add().
        Producto nuevoProducto = new Producto(nombre, precio, cantidad, idProducto);

        misProductos.add(nuevoProducto);
    }


//metodo para mostrar los productos agregados
    public void mostrarProductos() {
        System.out.println("====PRODUCTOS REGISTRADOS====");
//ciclo para mostrar los detalles del producto utilizando getters
        for(Producto p: misProductos){
            System.out.println("Nombre: "+p.getNombre());
            System.out.println("Precio: "+p.getPrecio());
            System.out.println("Cantidad: "+p.getCantidad());
            System.out.println("ID:" +p.getIdProducto());
            System.out.println("==================");
        }
    }


//metodo para ordenar los prductos de manera ascendente segun su cantidad
    public void listarProductos() {

//bucles aninados para comparar la cantidad de cada par de productos
        for (int i=0; i<misProductos.size()-1;i++){
            for(int j=i+1; j<misProductos.size();j++){
                Producto producto1 = misProductos.get(i);
                Producto producto2 = misProductos.get(j);
                if(producto1.getCantidad()>producto2.getCantidad()){
                    misProductos.set(i, producto2);
                    misProductos.set(j, producto1);
                }
            }
        }
//bucle para imprimir los detalles del producto utilizando los getters
        for (Producto p : misProductos) {
            System.out.println(" Nombre: "+p.getNombre()+ " \n Cantidad: " +p.getCantidad()+ " \n Precio: " + p.getPrecio()+"\nID:"+p.getIdProducto());
            System.out.println("======================================");
        }
    }

//metodo para eliminar un producto dando su id
public void eliminarProducto() {

	 System.out.println("Digite el Id del producto que quiere eliminar: ");
	int id = lector.nextInt();
	boolean encontrado = false;
        //recorre la lista de misProductos para verificar el id que se ingrese del producto
	 Iterator<Producto> iterador = misProductos.iterator();
	 while (iterador.hasNext()) {
	 Producto p = iterador.next();
         
         //Condicional para verificar la eliminacion del producto
	 if (p.getIdProducto() == id) {
	 encontrado = true;
	System.out.println("Desea eliminar el producto con el id: "+id );
	System.out.println("1. Confirmar\n 2. Cancelar: ");

	int confirmacion = lector.nextInt();
         //si el id coincide se elimina el producto usando remove
	 if (confirmacion == 1) {
	iterador.remove();
	System.out.println("El producto con el Id " + id + " ha sido eliminado.");
	 } else {
	System.out.println("El producto no se elimino");
	 }
	 break;
	//mostrar error si no se encuentra ningun producto con el id que ingresa                }
	}
	if (!encontrado) {
	 System.out.println("No se encontró el producto con es Id.");
	 }
         }       
		    }
    public static void main(String[] args) {
        Taller2 organizador = new Taller2();
        organizador.mostrarMenu();
    }
}


package mundo;

/**
 * @author Maria Vallejo
* @ author Juliana Muñoz
 */
public class Producto {
    
    private String nombre;
    private double precio;
    private int cantidad;
    private int idProducto;

    public Producto() {
    }

    public Producto(String nombre, double precio, int cantidad, int idProducto) {
        this.nombre = nombre;
        this.precio = precio;
        this.cantidad = cantidad;
        this.idProducto = idProducto;
    }


    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public double getPrecio() {
        return precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    public int getCantidad() {
        return cantidad;
    }

    public void setCantidad(int cantidad) {
        this.cantidad = cantidad;
    }

    public int getIdProducto() {
        return idProducto;
    }

    public void setIdProducto(int idProducto) {
        this.idProducto = idProducto;
    }
    
}
